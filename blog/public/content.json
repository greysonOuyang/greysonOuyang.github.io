{"pages":[{"title":"","text":"#back-to-top { position: fixed; padding: 8px 0; transition: 0.4s ease opacity, 0.4s ease width, 0.4s ease transform, 0.4s ease border-radius; opacity: 0; line-height: 24px; outline: none; transform: translateY(120px); } #back-to-top.fade-in { opacity: 1; } #back-to-top.rise-up { transform: translateY(0); }","link":"/css/back-to-top.css"},{"title":"","text":"@font-face {font-family: \"iconfont\"; src: url('iconfont.eot?t=1582942234466'); /* IE9 */ src: url('iconfont.eot?t=1582942234466#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAL8AAsAAAAABuwAAAKtAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqBcIFnATYCJAMICwYABCAFhG0HNxsUBhHVk2lkXxTYxlrBWzw7ye4PWp4ZWPIw7EzQ90XwPNlV71fVzNZ2r6CQOhk9ByCHlDpImBLx9IKDRylwyM2/lA5IBSDtt+3JV9JCQSOvQ//Wke3Ex74FgM9zOb27CiiQ+YFym2PwUS/AeGtge2IUWYEUYcANYzcRPMDbEMAhgzKkvbPfMCwGsEgAmTd75mRsIYzBODmL4G/YaZAD+LBqp3oF+/n75WuNWFD4NKBh0IyOaTR/HA8LtBf0xlECyXJOwNkHGigDDMiwxvQANOKwNU7akAPHqhX4OD54akWOakKcvw5UhwGQpoufSYKlj1qtADD68BBg/KTfAqYoKjx87XB35PHd5724Ye7u54+L8q49eua468WTiQ7cfPrSZcSxwMXdkz11L0l5l/Pnn32YqgNPJn0evHO7LogELk7NFcTmOjt37kAffZVzMudV//6jM2acnN6IjOknZ1QSKEbXizon/vxacqCyaFzyn0M9Ymxq7dsNUdtjhsfsyFtFkytnErWSO1fl7dAj22kGRPVFnfiHv0NB94KhEyPr/1sMAG82fk4xjYZhXrD34RH4n5KBTSaWAZ16MLHhUQzJBVGg1zhAEPhj+DBVH3/zTsEWJA4UIaRDY8kjDasMPlzq4MfSBIdSuva7xLIEjZhQoIStGoQorkIRwVNoonhNGtZ7+EjgO/xEiYbDCIk90aVAOKtk3ARP2P9gj5wI2USJ2hvqd9g4L+OcF/JlYzB2Qzm3YkJeYs310ZMIAXGOsGj3YQgZCmeHh3RGpMx9T01P6o4cG4WMm+AJ+x/skRPR9qIqr7+hfoeNO2gj4RfyZUeHsRsGkKs6DaI9yiPXR08iBMQ5wqJNwxAylOZpDg/pzIRkmXvYioaqu+218e92AA7AoASWajLFBosVLQolbBoAAAA=') format('woff2'), url('iconfont.woff?t=1582942234466') format('woff'), url('iconfont.ttf?t=1582942234466') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url('iconfont.svg?t=1582942234466#iconfont') format('svg'); /* iOS 4.1- */ } .iconfont { font-family: \"iconfont\" !important; font-size: 16px; font-style: normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .icon-CN_bilibiliB:before { font-size: 30px; content: \"\\e64e\"; }","link":"/css/iconfont.css"},{"title":"","text":".ins-section-container { position: relative; background: #f7f7f7; } .ins-section { font-size: 14px; line-height: 16px; } .ins-section .ins-section-header, .ins-section .ins-search-item { padding: 8px 15px; } .ins-section .ins-section-header { color: #9a9a9a; border-bottom: 1px solid #e2e2e2; } .ins-section .ins-slug { margin-left: 5px; color: #9a9a9a; } .ins-section .ins-slug:before { content: '('; } .ins-section .ins-slug:after { content: ')'; } .ins-section .ins-search-item header, .ins-section .ins-search-item .ins-search-preview { overflow: hidden; white-space: nowrap; text-overflow: ellipsis; } .ins-section .ins-search-item header .ins-title { margin-left: 8px; } .ins-section .ins-search-item .ins-search-preview { height: 15px; font-size: 12px; color: #9a9a9a; margin: 5px 0 0 20px; } .ins-section .ins-search-item:hover, .ins-section .ins-search-item.active { color: #fff; background: #3273dc; } .ins-section .ins-search-item:hover .ins-slug, .ins-section .ins-search-item.active .ins-slug, .ins-section .ins-search-item:hover .ins-search-preview, .ins-section .ins-search-item.active .ins-search-preview { color: #fff; }","link":"/css/insight.css"},{"title":"","text":".searchbox { display: none; perspective: 50em; top: 0; left: 0; width: 100%; height: 100%; z-index: 100; background: rgba(0, 0, 0, 0.7); transform-origin: 0%; perspective-origin: top center; } .searchbox.show { display: block; } .searchbox, .searchbox .searchbox-container { position: fixed; } .searchbox .searchbox-container { overflow: hidden; } .searchbox .searchbox-selectable { cursor: pointer; } .searchbox .searchbox-input-wrapper { position: relative; } .searchbox .searchbox-input-wrapper .searchbox-input { width: 100%; border: none; outline: none; font-size: 16px; box-shadow: none; font-weight: 200; border-radius: 0; background: #fff; line-height: 20px; box-sizing: border-box; padding: 12px 28px 12px 20px; border-bottom: 1px solid #e2e2e2; } .searchbox .searchbox-input-wrapper .searchbox-close { top: 50%; right: 6px; width: 20px; height: 20px; line-height: 20px; font-size: 16px; margin-top: -11px; position: absolute; text-align: center; display: inline-block; } .searchbox .searchbox-input-wrapper .searchbox-close:hover { color: #3273dc; } .searchbox .searchbox-result-wrapper { left: 0; right: 0; top: 45px; bottom: 0; overflow-y: auto; position: absolute; } .searchbox .searchbox-container { left: 50%; top: 100px; width: 540px; z-index: 101; bottom: 100px; margin-left: -270px; box-sizing: border-box; } @media screen and (max-width: 559px), screen and (max-height: 479px) { .searchbox .searchbox-container { top: 0; left: 0; margin: 0; width: 100%; height: 100%; background: #f7f7f7; } }","link":"/css/search.css"},{"title":"","text":".pace { -webkit-pointer-events: none; pointer-events: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; } .pace-inactive { display: none; } .pace .pace-progress { background: #3273dc; position: fixed; z-index: 2000; top: 0; right: 100%; width: 100%; height: 2px; }","link":"/css/progressbar.css"},{"title":"","text":"(function () { function $() { return Array.prototype.slice.call(document.querySelectorAll.apply(document, arguments)); } $('body > .navbar, body > .section, body > .footer').forEach(function (element) { element.style.transition = '0s'; element.style.opacity = '0'; }); document.querySelector('body > .navbar').style.transform = 'translateY(-100px)'; ['.column-main > .card', '.column-left > .card, .column-right-shadow > .card', '.column-right > .card'].map(function (selector) { $(selector).forEach(function (element) { element.style.transition = '0s'; element.style.opacity = '0'; element.style.transform = 'scale(0.8)'; element.style.transformOrigin = 'center top'; }); }); setTimeout(function () { $('body > .navbar, body > .section, body > .footer').forEach(function (element) { element.style.opacity = '1'; element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out'; }); document.querySelector('body > .navbar').style.transform = 'translateY(0)'; ['.column-main > .card', '.column-left > .card, .column-right-shadow > .card', '.column-right > .card'].map(function (selector) { var i = 1; $(selector).forEach(function (element) { setTimeout(function () { element.style.opacity = '1'; element.style.transform = ''; element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out'; }, i * 100); i++; }); }); }); })();","link":"/js/animation.js"},{"title":"","text":"$(document).ready(function () { var $button = $('#back-to-top'); var $footer = $('footer.footer'); var $mainColumn = $('.column-main'); var $leftSidebar = $('.column-left'); var $rightSidebar = $('.column-right'); var lastScrollTop = 0; var rightMargin = 20; var bottomMargin = 20; var lastState = null; var state = { base: { classname: 'card has-text-centered', left: '', width: 64, bottom: bottomMargin, 'border-radius': 4 } }; state['desktop-hidden'] = Object.assign({}, state.base, { classname: state.base.classname + ' rise-up', }); state['desktop-visible'] = Object.assign({}, state['desktop-hidden'], { classname: state['desktop-hidden'].classname + ' fade-in', }); state['desktop-dock'] = Object.assign({}, state['desktop-visible'], { classname: state['desktop-visible'].classname + ' fade-in', width: 40, 'border-radius': '50%' }); state['mobile-hidden'] = Object.assign({}, state.base, { classname: state.base.classname + ' fade-in', right: rightMargin }); state['mobile-visible'] = Object.assign({}, state['mobile-hidden'], { classname: state['mobile-hidden'].classname + ' rise-up', }); function isStateEquals(prev, next) { for (var prop in prev) { if (!next.hasOwnProperty(prop) || next[prop] !== prev[prop]) { return false; } } for (var prop in next) { if (!prev.hasOwnProperty(prop) || prev[prop] !== prev[prop]) { return false; } } return true; } function applyState(state) { if (lastState !== null && isStateEquals(lastState, state)) { return; } $button.attr('class', state.classname); for (let prop in state) { if (prop === 'classname') { continue; } $button.css(prop, state[prop]); } lastState = state; } function isDesktop() { return window.innerWidth >= 1078; } function isTablet() { return window.innerWidth >= 768 && !isDesktop(); } function isScrollUp() { return $(window).scrollTop() < lastScrollTop && $(window).scrollTop() > 0; } function hasLeftSidebar() { return $leftSidebar.length > 0; } function hasRightSidebar() { return $rightSidebar.length > 0; } function getRightSidebarBottom() { if (!hasRightSidebar()) { return 0; } return Math.max.apply(null, $rightSidebar.find('.widget').map(function () { return $(this).offset().top + $(this).outerHeight(true); })); } function getScrollTop() { return $(window).scrollTop(); } function getScrollBottom() { return $(window).scrollTop() + $(window).height(); } function getButtonWidth() { return $button.outerWidth(true); } function getButtonHeight() { return $button.outerHeight(true); } function updateScrollTop() { lastScrollTop = $(window).scrollTop(); } function update() { // desktop mode or tablet mode with only right sidebar enabled if (isDesktop() || (isTablet() && !hasLeftSidebar() && hasRightSidebar())) { var nextState; var padding = ($mainColumn.outerWidth() - $mainColumn.width()) / 2; var maxLeft = $(window).width() - getButtonWidth() - rightMargin; var maxBottom = $footer.offset().top + getButtonHeight() / 2 + bottomMargin; if (getScrollTop() == 0 || getScrollBottom() < getRightSidebarBottom() + padding + getButtonHeight()) { nextState = state['desktop-hidden']; } else if (getScrollBottom() < maxBottom) { nextState = state['desktop-visible']; } else { nextState = Object.assign({}, state['desktop-dock'], { bottom: getScrollBottom() - maxBottom + bottomMargin }); } var left = $mainColumn.offset().left + $mainColumn.outerWidth() + padding; nextState = Object.assign({}, nextState, { left: Math.min(left, maxLeft) }); applyState(nextState); } else { // mobile and tablet mode if (!isScrollUp()) { applyState(state['mobile-hidden']); } else { applyState(state['mobile-visible']); } updateScrollTop(); } } update(); $(window).resize(update); $(window).scroll(update); $('#back-to-top').on('click', function () { $('body, html').animate({ scrollTop: 0 }, 400); }); });","link":"/js/back-to-top.js"},{"title":"","text":"document.addEventListener('DOMContentLoaded', function () { if (typeof ($.fn.lightGallery) === 'function') { $('.article').lightGallery({ selector: '.gallery-item' }); } if (typeof ($.fn.justifiedGallery) === 'function') { if ($('.justified-gallery > p > .gallery-item').length) { $('.justified-gallery > p > .gallery-item').unwrap(); } $('.justified-gallery').justifiedGallery(); } });","link":"/js/gallery.js"},{"title":"","text":"(function ($) { $('.article img:not(\".not-gallery-item\")').each(function () { // wrap images with link and add caption if possible if ($(this).parent('a').length === 0) { $(this).wrap(''); if (this.alt) { $(this).after('' + this.alt + ''); } } }); if (typeof (moment) === 'function') { $('.article-meta time').each(function () { $(this).text(moment($(this).attr('datetime')).fromNow()); }); } $('.article > .content > table').each(function () { if ($(this).width() > $(this).parent().width()) { $(this).wrap(''); } }); function adjustNavbar() { const navbarWidth = $('.navbar-main .navbar-start').outerWidth() + $('.navbar-main .navbar-end').outerWidth(); if ($(document).outerWidth() < navbarWidth) { $('.navbar-main .navbar-menu').addClass('is-flex-start'); } else { $('.navbar-main .navbar-menu').removeClass('is-flex-start'); } } adjustNavbar(); $(window).resize(adjustNavbar); $('figure.highlight table').wrap(''); if (typeof (IcarusThemeSettings) !== 'undefined' && typeof (IcarusThemeSettings.article) !== 'undefined' && typeof (IcarusThemeSettings.article.highlight) !== 'undefined') { $('figure.highlight').addClass('hljs'); $('figure.highlight .code .line span').each(function () { const classes = $(this).attr('class').split(/\\s+/); if (classes.length === 1) { $(this).addClass('hljs-' + classes[0]); $(this).removeClass(classes[0]); } }); var clipboard = IcarusThemeSettings.article.highlight.clipboard; var fold = IcarusThemeSettings.article.highlight.fold; fold = fold.trim(); $('figure.highlight').each(function () { if ($(this).find('figcaption').length) { $(this).find('figcaption').addClass('level is-mobile'); $(this).find('figcaption').append(''); $(this).find('figcaption').append(''); $(this).find('figcaption div.level-left').append($(this).find('figcaption').find('span')); $(this).find('figcaption div.level-right').append($(this).find('figcaption').find('a')); } else { if (clipboard || fold) { $(this).prepend(''); } } }); if (typeof (ClipboardJS) !== 'undefined' && clipboard) { $('figure.highlight').each(function () { var id = 'code-' + Date.now() + (Math.random() * 1000 | 0); var button = ''; $(this).attr('id', id); $(this).find('figcaption div.level-right').append(button); }); new ClipboardJS('.highlight .copy'); } if (fold) { var button = '' + (fold === 'unfolded' ? '' : '') + ''; $('figure.highlight').each(function () { // 此处find \">folded\" span,如果有自定义code头,并且\">folded\"进行处理 // 使用示例，.md 文件中头行标记\">folded\" // ```java main.java >folded // import main.java // private static void main(){ // // test // int i = 0; // return i; // } // ``` if ($(this).find('figcaption').find('span').length > 0) { let spanArr = $(this).find('figcaption').find('span'); if (spanArr[0].innerText.indexOf(\">folded\") > -1) { // 去掉folded spanArr[0].innerText = spanArr[0].innerText.replace(\">folded\", \"\") button = ''; $(this).find('figcaption div.level-left').prepend(button); // 收叠代码块 toggleFold(this, true); return; } } $(this).find('figcaption div.level-left').prepend(button); toggleFold(this, fold === 'folded'); }); function toggleFold(codeBlock, isFolded) { var $toggle = $(codeBlock).find('.fold i'); !isFolded ? $(codeBlock).removeClass('folded') : $(codeBlock).addClass('folded'); !isFolded ? $toggle.removeClass('fa-angle-right') : $toggle.removeClass('fa-angle-down'); !isFolded ? $toggle.addClass('fa-angle-down') : $toggle.addClass('fa-angle-right'); } // $('figure.highlight').each(function () { // toggleFold(this, fold === 'folded'); // }); $('figure.highlight figcaption .fold').click(function () { var $code = $(this).closest('figure.highlight'); toggleFold($code.eq(0), !$code.hasClass('folded')); }); } } var $toc = $('#toc'); if ($toc.length > 0) { var $mask = $(''); $mask.attr('id', 'toc-mask'); $('body').append($mask); function toggleToc() { $toc.toggleClass('is-active'); $mask.toggleClass('is-active'); } $toc.on('click', toggleToc); $mask.on('click', toggleToc); $('.navbar-main .catalogue').on('click', toggleToc); } // hexo-util/lib/is_external_link.js function isExternalLink(input, sitehost, exclude) { try { sitehost = new URL(sitehost).hostname; } catch (e) { } if (!sitehost) return false; // handle relative url const data = new URL(input, 'http://' + sitehost); // handle mailto: javascript: vbscript: and so on if (data.origin === 'null') return false; const host = data.hostname; if (exclude) { exclude = Array.isArray(exclude) ? exclude : [exclude]; if (exclude && exclude.length) { for (const i of exclude) { if (host === i) return false; } } } if (host !== sitehost) return true; return false; } if (typeof (IcarusThemeSettings) !== 'undefined' && typeof (IcarusThemeSettings.site.url) !== 'undefined' && typeof (IcarusThemeSettings.site.external_link) !== 'undefined' && IcarusThemeSettings.site.external_link.enable) { $('.article .content a').filter(function (i, link) { return link.href && !$(link).attr('href').startsWith('#') && link.classList.length === 0 && isExternalLink(link.href, IcarusThemeSettings.site.url, IcarusThemeSettings.site.external_link.exclude); }).each(function (i, link) { link.relList.add('noopener'); link.target = '_blank'; }); } })(jQuery);","link":"/js/main.js"},{"title":"","text":"/* --------------------------------- * Override CSS Framework * --------------------------------- */ html { font-size: 14px; } body { background-color: #f7f7f7; } body, button, input, select, textarea { font-family: \"Ubuntu\", \"Roboto\", \"Open Sans\", \"Microsoft YaHei\", sans-serif; } @media screen and (min-width: 1280px) { .is-1-column .container, .is-2-column .container { max-width: 960px; width: 960px; } } @media screen and (min-width: 1472px) { .is-2-column .container { max-width: 1152px; width: 1152px; } .is-1-column .container { max-width: 960px; width: 960px; } } @media screen and (max-width: 768px) { .section { padding: 1.5rem 1rem; } } @media screen and (min-width: 769px) { .column-main.is-sticky, .column-left.is-sticky, .column-right.is-sticky, .column-right-shadow.is-sticky { align-self: flex-start; position: -webkit-sticky; position: sticky; top: 0.75rem; } .column-right-shadow.is-sticky { top: 1.5rem; } } .tag.is-grey { background: #e7e7e7; } .card { border-radius: 4px; box-shadow: 0 4px 10px rgba(0,0,0,0.05), 0 0 1px rgba(0,0,0,0.1); } .card + .card, .card + .column-right-shadow { margin-top: 1.5rem; } .card.card-transparent { box-shadow: none; background: transparent; } .card .card-image { overflow: hidden; border-top-left-radius: 4px; border-top-right-radius: 4px; } img.thumbnail { object-fit: cover; width: 100%; height: 100%; } .navbar-logo img, .footer-logo img { max-height: 1.75rem; } .navbar-main { box-shadow: 0 4px 10px rgba(0,0,0,0.05); } .navbar-main .navbar-menu, .navbar-main .navbar-start, .navbar-main .navbar-end { align-items: stretch; display: flex; padding: 0; flex-shrink: 0; } .navbar-main .navbar-menu { flex-grow: 1; flex-shrink: 0; overflow-x: auto; } .navbar-main .navbar-start { justify-content: flex-start; margin-right: auto; } .navbar-main .navbar-end { justify-content: flex-end; margin-left: auto; } .navbar-main .navbar-item { display: flex; align-items: center; padding: 1.25rem 0.75rem; } .navbar-main .navbar-item.is-active { color: #3273dc; background-color: transparent; } @media screen and (max-width: 1087px) { .navbar-main .navbar-menu { justify-content: center; box-shadow: none; } .navbar-main .navbar-start { margin-right: 0; } .navbar-main .navbar-end { margin-left: 0; } } .footer { background: #fff; } .footer .field .button { background: transparent; } .widget .media { border: none; } .widget .media + .media { margin-top: 0; } .widget .menu-list li ul { margin-right: 0; } .widget .menu-list a.level { display: flex; } .widget .has-text-centered figure.image { margin: auto; } .pagination .pagination-link:not(.is-current), .pagination .pagination-previous, .pagination .pagination-next { background: #fff; border: none; } .pagination .pagination-link, .pagination .pagination-previous, .pagination .pagination-next { box-shadow: 0 4px 10px rgba(0,0,0,0.05); } .post-navigation { justify-content: space-around; } .post-navigation .level-item { margin-bottom: 0; } .timeline { margin-left: 1rem; padding-left: 1.5rem; padding-top: 1rem; border-left: 1px solid #dbdbdb; } .timeline .media { position: relative; } .timeline .media:before, .timeline .media:last-child:after { content: ''; display: block; position: absolute; left: calc(-5px - 1.5rem); } .timeline .media:before { width: 9px; height: 9px; top: 1.3rem; background: #dbdbdb; border-radius: 50%; } .timeline .media:first-child:before { top: 0.3rem; } .timeline .media:last-child:after { top: calc(1.3rem + 9px); width: 9px; bottom: 0; background: #fff; } .timeline .media:first-child:last-child:after { top: calc(0.3rem + 9px); } .article .article-meta { margin-bottom: 0.5rem !important; } .article .content { font-size: 1.1rem; } .article .content blockquote.pullquote { float: right; max-width: 50%; font-size: 1.15rem; position: relative; } .article .content a { word-wrap: break-word; } .rtl { direction: rtl; } .rtl .level .level-item:not(:last-child), .rtl .level.is-mobile .level-item:not(:last-child) { margin-left: 0.75rem; margin-right: 0; } .donate { position: relative; } .donate .qrcode { display: none; position: absolute; z-index: 99; bottom: 2.5em; line-height: 0; overflow: hidden; border-radius: 4px; box-shadow: 0 4px 10px rgba(0,0,0,0.1), 0 0 1px rgba(0,0,0,0.2); overflow: hidden; } .donate .qrcode img { max-width: 280px; } .donate:hover .qrcode { display: block; } .donate:first-child:not(:last-child) .qrcode { left: -0.75rem; } .donate:last-child:not(:first-child) .qrcode { right: -0.75rem; } @media screen and (max-width: 768px) { #toc { display: none; position: fixed; margin: 1rem; left: 0; right: 0; bottom: 0; z-index: 100; max-height: calc(100vh - 2rem); overflow-y: auto; } #toc-mask { display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 99; background: rgba(0,0,0,0.7); } #toc.is-active, #toc-mask.is-active { display: block; } } /* --------------------------------- * Custom modifiers * --------------------------------- */ .is-borderless { border: none; } .is-size-7 { font-size: 0.85rem !important; } .is-7by1 { padding-top: 42.8%; } .is-7by1 img { bottom: 0; left: 0; position: absolute; right: 0; top: 0; } .is-overflow-x-auto { overflow-x: auto !important; } .is-flex-grow { flex-grow: 1 !important; } .is-flex-wrap { flex-wrap: wrap !important; } .is-flex-start { justify-content: start !important; } .is-flex-center { justify-content: center !important; } .is-flex-middle { align-items: center !important; } .has-order-1 { order: 1; } .has-order-2 { order: 2; } .has-order-3 { order: 3; } .has-mr-6 { margin-right: 0.5em !important; } .has-mb-6 { margin-bottom: 0.5em !important; } .has-mr-7 { margin-right: 0.25em !important; } .has-link-grey, .has-link-black-ter { transition: 0.2s ease; } .has-link-grey:hover, .has-link-black-ter:hover { color: #3273dc !important; } .has-link-grey { color: #7a7a7a !important; } .has-link-black-ter { color: #242424 !important; } @media screen and (max-width: 768px) { .has-text-centered-mobile { text-align: center !important; } .is-flex-center-mobile { justify-content: center !important; } .has-mt-5-mobile { margin-top: 1em !important; } } /* --------------------------------- * Font icon fixes * --------------------------------- */ .fa, .fab, .fal, .far, .fas { line-height: inherit; } /* --------------------------------- * Fix content elements * --------------------------------- */ .content h1, .content h2, .content h3, .content h4, .content h5, .content h6 { font-weight: 400; } .content h1 { font-size: 1.75em; } .content h2 { font-size: 1.5em; } .content h3 { font-size: 1.25em; } .content h4 { font-size: 1.125em; } .content h5 { font-size: 1em; } .content code, .content pre { font-family: \"Source Code Pro\", monospace, \"Microsoft YaHei\"; } .content pre { font-size: 0.85em; } .content code { padding: 0; background: transparent; } .content > code, .content :not(pre) > code { font-size: 0.85em; color: #ff3860; } .content blockquote footer strong + cite { margin-left: 0.5em; } /* --------------------------------- * Fix code highlight * --------------------------------- */ figure.highlight { padding: 0; width: 100%; position: relative; margin: 1em 0 1em !important; } figure.highlight.folded .highlight-body { height: 0; } figure.highlight pre, figure.highlight table tr:hover { color: inherit; background: transparent; } figure.highlight table { width: auto; } figure.highlight table tr td { border: none; } figure.highlight table tr:not(:first-child) td { padding-top: 0; } figure.highlight table tr:not(:last-child) td { padding-bottom: 0; } figure.highlight pre { padding: 0; overflow: visible; } figure.highlight pre .line, figure.highlight pre code .hljs { line-height: 1.5rem; } figure.highlight figcaption, figure.highlight .gutter { background: rgba(200,200,200,0.15); } figure.highlight figcaption { margin: 0 !important; padding: 0.3em 0.75em; text-align: left; font-style: normal; font-size: 0.8em; } figure.highlight figcaption span { font-weight: 500; font-family: \"Source Code Pro\", monospace, \"Microsoft YaHei\"; } figure.highlight figcaption .fold, figure.highlight figcaption a { color: #9a9a9a; } figure.highlight figcaption a { margin-left: 0.5em; } figure.highlight figcaption .fold { margin-right: 0.5em; cursor: pointer; } figure.highlight .highlight-body { overflow: auto; } figure.highlight .gutter { text-align: right; } figure.highlight .tag, figure.highlight .title, figure.highlight .number, figure.highlight .section { display: inherit; font: inherit; margin: inherit; padding: inherit; background: inherit; height: inherit; text-align: inherit; vertical-align: inherit; min-width: inherit; border-radius: inherit; } /* --------------------------------- * Overflow Table * --------------------------------- */ .table-overflow { overflow-x: auto; } .table-overflow table { width: auto !important; } .table-overflow table th { word-break: keep-all; } /* --------------------------------- * Fix Video * --------------------------------- */ .video-container { position: relative; padding-bottom: 56.25%; padding-top: 25px; height: 0; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; } /* --------------------------------- * Fix Gist Snippet * --------------------------------- */ .gist table tr:hover { background: transparent; } .gist table td { border: none; } .gist .file { all: initial; }","link":"/css/style.css"},{"title":"","text":"/** * Insight search plugin * @author PPOffice { @link https://github.com/ppoffice } */ (function ($, CONFIG) { var $main = $('.ins-search'); var $input = $main.find('.ins-search-input'); var $wrapper = $main.find('.ins-section-wrapper'); var $container = $main.find('.ins-section-container'); $main.parent().remove('.ins-search'); $('body').append($main); function section (title) { return $('').addClass('ins-section') .append($('').addClass('ins-section-header').text(title)); } function searchItem (icon, title, slug, preview, url) { return $('').addClass('ins-selectable').addClass('ins-search-item') .append($('').append($('').addClass('fa').addClass('fa-' + icon)) .append($('').addClass('ins-title').text(title != null && title !== '' ? title : CONFIG.TRANSLATION['UNTITLED'])) .append(slug ? $('').addClass('ins-slug').text(slug) : null)) .append(preview ? $('').addClass('ins-search-preview').text(preview) : null) .attr('data-url', url); } function sectionFactory (type, array) { var sectionTitle; var $searchItems; if (array.length === 0) return null; sectionTitle = CONFIG.TRANSLATION[type]; switch (type) { case 'POSTS': case 'PAGES': $searchItems = array.map(function (item) { // Use config.root instead of permalink to fix url issue return searchItem('file', item.title, null, item.text.slice(0, 150), item.link); }); break; case 'CATEGORIES': case 'TAGS': $searchItems = array.map(function (item) { return searchItem(type === 'CATEGORIES' ? 'folder' : 'tag', item.name, item.slug, null, item.link); }); break; default: return null; } return section(sectionTitle).append($searchItems); } function parseKeywords (keywords) { return keywords.split(' ').filter(function (keyword) { return !!keyword; }).map(function (keyword) { return keyword.toUpperCase(); }); } /** * Judge if a given post/page/category/tag contains all of the keywords. * @param Object obj Object to be weighted * @param Array fields Object's fields to find matches */ function filter (keywords, obj, fields) { var keywordArray = parseKeywords(keywords); var containKeywords = keywordArray.filter(function (keyword) { var containFields = fields.filter(function (field) { if (!obj.hasOwnProperty(field)) return false; if (obj[field].toUpperCase().indexOf(keyword) > -1) return true; }); if (containFields.length > 0) return true; return false; }); return containKeywords.length === keywordArray.length; } function filterFactory (keywords) { return { POST: function (obj) { return filter(keywords, obj, ['title', 'text']); }, PAGE: function (obj) { return filter(keywords, obj, ['title', 'text']); }, CATEGORY: function (obj) { return filter(keywords, obj, ['name', 'slug']); }, TAG: function (obj) { return filter(keywords, obj, ['name', 'slug']); } }; } /** * Calculate the weight of a matched post/page/category/tag. * @param Object obj Object to be weighted * @param Array fields Object's fields to find matches * @param Array weights Weight of every field */ function weight (keywords, obj, fields, weights) { var value = 0; parseKeywords(keywords).forEach(function (keyword) { var pattern = new RegExp(keyword, 'img'); // Global, Multi-line, Case-insensitive fields.forEach(function (field, index) { if (obj.hasOwnProperty(field)) { var matches = obj[field].match(pattern); value += matches ? matches.length * weights[index] : 0; } }); }); return value; } function weightFactory (keywords) { return { POST: function (obj) { return weight(keywords, obj, ['title', 'text'], [3, 1]); }, PAGE: function (obj) { return weight(keywords, obj, ['title', 'text'], [3, 1]); }, CATEGORY: function (obj) { return weight(keywords, obj, ['name', 'slug'], [1, 1]); }, TAG: function (obj) { return weight(keywords, obj, ['name', 'slug'], [1, 1]); } }; } function search (json, keywords) { var WEIGHTS = weightFactory(keywords); var FILTERS = filterFactory(keywords); var posts = json.posts; var pages = json.pages; var tags = json.tags; var categories = json.categories; return { posts: posts.filter(FILTERS.POST).sort(function (a, b) { return WEIGHTS.POST(b) - WEIGHTS.POST(a); }).slice(0, 5), pages: pages.filter(FILTERS.PAGE).sort(function (a, b) { return WEIGHTS.PAGE(b) - WEIGHTS.PAGE(a); }).slice(0, 5), categories: categories.filter(FILTERS.CATEGORY).sort(function (a, b) { return WEIGHTS.CATEGORY(b) - WEIGHTS.CATEGORY(a); }).slice(0, 5), tags: tags.filter(FILTERS.TAG).sort(function (a, b) { return WEIGHTS.TAG(b) - WEIGHTS.TAG(a); }).slice(0, 5) }; } function searchResultToDOM (searchResult) { $container.empty(); for (var key in searchResult) { $container.append(sectionFactory(key.toUpperCase(), searchResult[key])); } } function scrollTo ($item) { if ($item.length === 0) return; var wrapperHeight = $wrapper[0].clientHeight; var itemTop = $item.position().top - $wrapper.scrollTop(); var itemBottom = $item[0].clientHeight + $item.position().top; if (itemBottom > wrapperHeight + $wrapper.scrollTop()) { $wrapper.scrollTop(itemBottom - $wrapper[0].clientHeight); } if (itemTop < 0) { $wrapper.scrollTop($item.position().top); } } function selectItemByDiff (value) { var $items = $.makeArray($container.find('.ins-selectable')); var prevPosition = -1; $items.forEach(function (item, index) { if ($(item).hasClass('active')) { prevPosition = index; return; } }); var nextPosition = ($items.length + prevPosition + value) % $items.length; $($items[prevPosition]).removeClass('active'); $($items[nextPosition]).addClass('active'); scrollTo($($items[nextPosition])); } function gotoLink ($item) { if ($item && $item.length) { location.href = $item.attr('data-url'); } } $.getJSON(CONFIG.CONTENT_URL, function (json) { if (location.hash.trim() === '#ins-search') { $main.addClass('show'); } $input.on('input', function () { var keywords = $(this).val(); searchResultToDOM(search(json, keywords)); }); $input.trigger('input'); }); var touch = false; $(document).on('click focus', '.navbar-main .search', function () { $main.addClass('show'); $main.find('.ins-search-input').focus(); }).on('click touchend', '.ins-search-item', function (e) { if (e.type !== 'click' && !touch) { return; } gotoLink($(this)); touch = false; }).on('click touchend', '.ins-close', function (e) { if (e.type !== 'click' && !touch) { return; } $('.navbar-main').css('pointer-events', 'none'); setTimeout(function(){ $('.navbar-main').css('pointer-events', 'auto'); }, 400); $main.removeClass('show'); touch = false; }).on('keydown', function (e) { if (!$main.hasClass('show')) return; switch (e.keyCode) { case 27: // ESC $main.removeClass('show'); break; case 38: // UP selectItemByDiff(-1); break; case 40: // DOWN selectItemByDiff(1); break; case 13: //ENTER gotoLink($container.find('.ins-selectable.active').eq(0)); break; } }).on('touchstart', function (e) { touch = true; }).on('touchmove', function (e) { touch = false; }); })(jQuery, window.INSIGHT_CONFIG);","link":"/js/insight.js"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/posts/undefined/"},{"title":"AQS 队列初始化 —— 源码分析","text":"假设如下情景：线程 T1 已经获取锁 ， 线程 T2 此时进来 ， 首先判断锁的状态 ， 锁已经被占有，则入队。 Node 类的设计： 123456public class Node { volatile Node prev; volatile Node next; volatile Thread thread; int ws; // 当前 Node 的状态} 入队过程： 根据线程来实例化一个 Node 12345678910111213141516171819private Node addWaiter(Node mode) { // 根据当前线程实例化一个Node Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure /** * 1. 将尾部赋给一个临时变量，注意此时tail为空，因为tail此时还没有指向Node对象 * 2. tail == null，因此执行 enq(node) 方法，这个node是创建的当前线程的node */ Node pred = tail; if (pred != null) { node.prev = pred; if (compareAndSetTail(pred, node)) { pred.next = node; return node; } } enq(node); return node; } 再次实例化一个 Thread 为 null 的 Node ， 我们暂时称其为 NullThreadNode 注意：AQS队列中队头所指向的Node的Thread永远为空 把 NullThreadNode 设置为 AQS 队列的头部和尾部 队列初始化 维护链表关系（入队） 1234567891011121314151617181920212223242526272829private Node enq(final Node node) { // 死循环判断 for (;;) { /** * 第一次循环： * tail赋值给临时变量t， 注意此时tail仍然是null, 进入if块 * 调用compareAndSetHead(new Node()) 创建了一个新的节点 ，这个节点的结构如下： * Node() { // Used to establish initial head or SHARED marker * } * 该节点为空，也就是我们称为 NullThreadNode 的节点 * 此时队列里有了第一个Node */ Node t = tail; if (t == null) { // Must initialize if (compareAndSetHead(new Node())) tail = head; } else { /** * 第二次循环：在第一次循环时head赋给了tail,此时tail 不为空， * 进入else块，将线程T1入队，也就是维护链表关系 */ node.prev = t; if (compareAndSetTail(t, node)) { t.next = node; return t; } } } } 自旋一次 ，判断能不能拿到锁 注意此处，只有队列中第二个 Node 才有自旋的资格，第三个及其以后的 Node 很显然前边有优先级更高的线程在等待锁。 12345678910111213141516171819202122232425262728final boolean acquireQueued(final Node node, int arg) { boolean failed = true; try { boolean interrupted = false; for (;;) { final Node p = node.predecessor(); // 判断上一个节点是否是头部，即当前节点为队列中第二个节点，tryAcquire()尝试获取锁 if (p == head &amp;&amp; tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return interrupted; } /** * 判断在一次自旋加锁失败后是否需要睡眠 * 自旋第一次时shouldParkAfterFailedAcquire(p, node)返回false, 不会进入if块 * 自旋第二次时，shouldParkAfterFailedAcquire(p, node)返回true, * 此时进入parkAndCheckInterrupt()方法，此时线程阻塞在 parkAndCheckInterrupt() */ if (shouldParkAfterFailedAcquire(p, node) &amp;&amp; parkAndCheckInterrupt()) interrupted = true; } } finally { if (failed) cancelAcquire(node); } } shouldParkAfterFailedAcquire() 源码如下： pred 是上一个节点，在此时也就是队列中的第一个节点，即上面我们称之为 NullThreadNode 的节点，每个节点的waitStatus初始值为0，SIGNAL默认值为1。此方法在第一次被调用时会进入 else 块，将 ws 设置为 -1，在第二次被调用时ws == SIGNAL，返回true。 1234567891011121314private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) { int ws = pred.waitStatus; // ws默认值为0，SIGNAL默认值为1 if (ws == Node.SIGNAL) return true; if (ws &gt; 0) { do { node.prev = pred = pred.prev; } while (pred.waitStatus &gt; 0); pred.next = node; } else { compareAndSetWaitStatus(pred, ws, Node.SIGNAL); // CAS设置ws } return false; } 线程阻塞在 parkAndCheckInterrupt() 方法中 上述就是一个队列的入队过程，我们再进一步研究下，如果同时有大量的线程并发执行企图获取锁的情况是怎样的呢？ 我们假设此时还要一个线程 T3 企图获取锁，我们只关注第七个步骤，在执行到 shouldParkAfterFailedAcquire() 方法时，在第一次被调用时判断 ws = 0（注意 ws 是上一个节点的waitStatus，此时也就是第二个节点的ws），因此执行 else 块并且将 ws 设置为 -1，在第二次循环时ws 已经是 -1 ，所以执行第一个 if 块，返回true；线程 T3 阻塞。 多个线程的执行过程同理，即重复上述步骤。","link":"/posts/2565f79d/"}],"tags":[{"name":"高并发","slug":"高并发","link":"/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"}],"categories":[]}